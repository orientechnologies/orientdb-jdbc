*OrientDB  JDBC Driver*

OrientDB (http://code.google.com/p/orient/) is a NoSql DBMS that support a subset of SQL ad query languge.
This project is an effort to develop a JDBC driver for OrientDB

*Include in your projects*

Orient-jdbc are deployed on sonatype's maven repository. At the moment only snapshots are available, so 
<pre>

	<dependency>
		<groupId>com.orientechnologies</groupId>
		<artifactId>orientdb-jdbc</artifactId>
		<version>1.0-SNAPSHOT</version>
	</dependency>

</pre>

*How to build*
Orient-jdbc uses maven.

Edit pom.xml file.

<pre>
<version>1.6.4</version>
<properties>
	<orient.version>1.6.4</orient.version>
</properties>
</pre>

<pre><version></pre> is orientdb-jdbc driver version, you'd build.
<pre><orient.version></pre> is orientdb-enterprise version, you'd use to build.

As of Feb 4th, 2014, the supported versions are upto, 1.6.x, 1.7-SNAPSHOT, 2.0-SNAPSHOT.

The following command builds the jar after tests are successfully.

<pre>mvn install</pre>

You can skip tests,

<pre>mvn install -Dmaven.test.skip=true</pre>


*How to build a jar-with-dependencies*

Do a 

<pre>mvn assembly:assembly</pre>

again, you can skip tests,

<pre>mvn assembly:assembly -Dmaven.test.skip=true</pre>

to obtain a jar with dependency included under target directory.

Just copy orientdb-jdbc-1.6.4-SNAPSHOT-all.jar to your classpath.

It is very usefull to include under applications such as DBVisualizer.

*How can be used in my code?*

The driver is registerd to the Java sql DriverManager and can be used to work with all the OrientDB database types: memory, local or remote.
The driver's class is com.orientechnologies.orient.jdbc.OrientJdbcDriver.

Use your knowledge of JDBC API to work against OrientDB.

First get a connection

<pre>
Properties info = new Properties();
info.put("user", "admin");
info.put("password", "admin");

Connection conn = (OrientJdbcConnection) DriverManager.getConnection("jdbc:orient:remote:localhost/test", info);
</pre>

Then execute a Statement and get the ResultSet

<pre>
Statement stmt = conn.createStatement();

ResultSet rs = stmt.executeQuery("SELECT stringKey, intKey, text, length, date FROM Item");

rs.next();

rs.getInt("@version");
rs.getString("@class");
rs.getString("@rid");

rs.getString("stringKey");
rs.getInt("intKey");

rs.close();
stmt.close();

</pre>

The driver retrieve Orient metadata (@rid,@class and @version) only on direct queries. 
Take a look at tests code to see more detailed examples.
